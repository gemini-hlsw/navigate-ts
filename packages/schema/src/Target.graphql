#import DateTime from "./DateTime.graphql"

enum TargetType {
  FIXED
  SCIENCE
  BLINDOFFSET
  PWFS1
  PWFS2
  OIWFS
}

type RA {
  degrees: Float!
  hms: String!
}

type Dec {
  degrees: Float!
  dms: String!
}

type Az {
  degrees: Float!
  dms: String!
}

type El {
  degrees: Float!
  dms: String!
}

type Target {
  "Primary Key"
  pk: Int!
  "Target ID"
  id: String
  "Name of the target"
  name: String!
  "Right Ascension"
  ra: RA
  "Azimuth"
  az: Az
  "Elevation"
  el: El
  "Declination"
  dec: Dec
  "Magnitude of the target"
  magnitude: Float
  "Magnitude band"
  band: String
  "Epoch of target"
  epoch: String!
  "FIXED | SCIENCE | BLINDOFFSET | PWFS1 | PWFS2 | OIWFS"
  type: TargetType!
  "Wavelength"
  wavelength: Int
  "Datetime when it was created"
  createdAt: DateTime!
}

type Query {
  target(pk: Int, id: String, name: String): Target
  targets(type: TargetType): [Target!]!
}

input TargetInput {
  id: String
  name: String
  coord1: Float
  coord2: Float
  magnitude: Float
  band: String
  epoch: String
  type: String
  wavelength: Int
}

type Mutation {
  createTarget(
    id: String
    name: String!
    ra: Float
    az: Float
    dec: Float
    el: Float
    magnitude: Float
    band: String
    epoch: String
    type: TargetType!
    wavelength: Int
  ): Target!

  updateTarget(
    pk: Int!
    id: String
    name: String
    coord1: Float
    coord2: Float
    magnitude: Float
    band: String
    epoch: String
    type: TargetType
    wavelength: Int
  ): Target!

  removeAndCreateBaseTargets(targets: [TargetInput!]): [Target!]!

  removeAndCreateWfsTargets(wfs: TargetType, targets: [TargetInput!]): [Target!]!
}
