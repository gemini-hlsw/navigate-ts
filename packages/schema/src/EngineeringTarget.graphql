#import DateTime from "./Scalars.graphql"
#import RA, Az, El, Dec, TargetType, ProperMotion from "./Target.graphql"
#import RotatorTrackingMode from 'navigate-server-schema/navigate.graphql'
#import Instrument, PosInt from "lucuma-schemas/odb"

type EngineeringTarget {
  "Primary Key"
  pk: PosInt!
  "Target ID"
  id: String
  "Name of the target"
  name: String!
  "Right Ascention"
  ra: RA
  "Azimuth"
  az: Az
  "Elevation"
  el: El
  "Declination"
  dec: Dec
  "Proper Motion RA & Dec"
  properMotion: ProperMotion
  "Radial Velocity"
  radialVelocity: Float
  "Parallax"
  parallax: Float
  "Epoch of target"
  epoch: String
  "FIXED | SCIENCE | BLINDOFFSET | PWFS1 | PWFS2 | OIWFS"
  type: TargetType!
  "Wavelength"
  wavelength: Int
  "Instrument name"
  instrument: Instrument!
  "Rotator type"
  rotatorMode: RotatorTrackingMode
  "Rotator angle"
  rotatorAngle: Float
  "Datetime when it was created"
  createdAt: DateTime!
}

type Query {
  engineeringTarget(pk: PosInt, id: String, name: String): EngineeringTarget
  engineeringTargets(type: TargetType): [EngineeringTarget!]!
}

type Mutation {
  createEngineeringTarget(
    id: String
    name: String!
    ra: Float
    az: Float
    dec: Float
    el: Float
    pmRa: Float
    pmDec: Float
    radialVelocity: Float
    parallax: Float
    epoch: String
    type: TargetType!
    instrument: Instrument!
    wavelength: Int
    rotatorMode: RotatorTrackingMode
    rotatorAngle: Float
  ): EngineeringTarget!

  updateEngineeringTarget(
    pk: PosInt!
    id: String
    name: String
    coord1: Float
    coord2: Float
    pmRa: Float
    pmDec: Float
    radialVelocity: Float
    parallax: Float
    epoch: String
    type: TargetType
    instrument: Instrument
    wavelength: Int
    rotatorMode: RotatorTrackingMode
    rotatorAngle: Float
  ): EngineeringTarget!
}
